@startuml context_diagram

' Setting ''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

skinparam linetype ortho
<style>
component {
    BackgroundColor #lightgreen
}
.config {
    BackgroundColor #orange
}

.cuif {
    BackgroundColor #LightBlue
}
</style>

' Components '''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

package "Input" {
    file "Source file(s) supported by Doxygen\n(e.g. *cpp, *c, *.java), with doxygen documentation" as source_code <<files>>
    note left of source_code
        With implements and justification links 
        to TRLC requirements 
    end note
}

package "Doxygen Toolchain" {
    component "Doxygen" as doxygen <<tool>>
    file "Doxyfile" as doxygen_configuration <<config>>

    note bottom of doxygen_configuration
        With implements and justification
        aliases, Extract all and XML output
        enabled. 
    end note

    file "XML output" as xml_output <<files>>
}

package LOBSTER {
    package "System" {
        component "lobster-doxygen" as lobster_doxygen <<tool>> 
    }
    file "LOBSTER common interchange\nformat file (*.json)" as lobster_configuration_file 
}

' Flows ''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

source_code .down.> doxygen :  <<flow>>
doxygen ..l..> doxygen_configuration : <<use>>
doxygen .down..> xml_output : <<generates>>
xml_output .down.> lobster_doxygen : <<input>>
lobster_doxygen .down.> lobster_configuration_file : <<generates>>

@enduml