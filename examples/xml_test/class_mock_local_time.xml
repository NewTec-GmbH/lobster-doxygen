<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.10.0" xml:lang="en-US">
  <compounddef id="class_mock_local_time" kind="class" language="C++" prot="public">
    <compoundname>MockLocalTime</compoundname>
    <basecompoundref prot="public" virt="non-virtual">ILocalTime</basecompoundref>
    <includes refid="_mock_local_time_8h" local="no">MockLocalTime.h</includes>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_mock_local_time_1a09ad18aa724c49b2bb5287d6469c82fe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>MockLocalTime::MOCK_METHOD</definition>
        <argsstring>(time_t, time,(time_t *),(const, override))</argsstring>
        <name>MOCK_METHOD</name>
        <qualifiedname>MockLocalTime::MOCK_METHOD</qualifiedname>
        <param>
          <type>time_t</type>
        </param>
        <param>
          <type>time</type>
        </param>
        <param>
          <type>(time_t *)</type>
        </param>
        <param>
          <type>(const, override)</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Git/BMW_Lobster/trlcWorkInstructions/examples/cpp-greeter/test/mocks/MockLocalTime.h" line="73" column="5"/>
      </memberdef>
      <memberdef kind="function" id="class_mock_local_time_1a8543012a1915ff288e33fe9c0f7a399c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>MockLocalTime::MOCK_METHOD</definition>
        <argsstring>(tm *, localtime,(const time_t *),(const, override))</argsstring>
        <name>MOCK_METHOD</name>
        <qualifiedname>MockLocalTime::MOCK_METHOD</qualifiedname>
        <param>
          <type>tm *</type>
        </param>
        <param>
          <type>localtime</type>
        </param>
        <param>
          <type>(const time_t *)</type>
        </param>
        <param>
          <type>(const, override)</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Git/BMW_Lobster/trlcWorkInstructions/examples/cpp-greeter/test/mocks/MockLocalTime.h" line="74" column="5"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Mock class for the LocalTime to mock different current times. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>ILocalTime</label>
      </node>
      <node id="1">
        <label>MockLocalTime</label>
        <link refid="class_mock_local_time"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>ILocalTime</label>
      </node>
      <node id="1">
        <label>MockLocalTime</label>
        <link refid="class_mock_local_time"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="C:/Git/BMW_Lobster/trlcWorkInstructions/examples/cpp-greeter/test/mocks/MockLocalTime.h" line="70" column="1" bodyfile="C:/Git/BMW_Lobster/trlcWorkInstructions/examples/cpp-greeter/test/mocks/MockLocalTime.h" bodystart="71" bodyend="75"/>
    <listofallmembers>
      <member refid="class_mock_local_time_1a09ad18aa724c49b2bb5287d6469c82fe" prot="public" virt="non-virtual"><scope>MockLocalTime</scope><name>MOCK_METHOD</name></member>
      <member refid="class_mock_local_time_1a8543012a1915ff288e33fe9c0f7a399c" prot="public" virt="non-virtual"><scope>MockLocalTime</scope><name>MOCK_METHOD</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
