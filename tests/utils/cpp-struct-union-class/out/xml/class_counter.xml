<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.14.0" xml:lang="en-US">
  <compounddef id="class_counter" kind="class" language="C++" prot="public">
    <compoundname>Counter</compoundname>
    <includes refid="_counter_8h" local="no">Counter.h</includes>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_counter_1a7ed267f99d5efdec11b178f31cd00525" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int Counter::counter</definition>
        <argsstring></argsstring>
        <name>counter</name>
        <qualifiedname>Counter::counter</qualifiedname>
        <initializer>= 0</initializer>
        <briefdescription>
<para>Internal counter value. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Counter.h" line="60" column="9" bodyfile="src/Counter.h" bodystart="60" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_counter_1a424d25be2a0c638f7b8c72195fa8c2ef" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Counter::Counter</definition>
        <argsstring>(void)</argsstring>
        <name>Counter</name>
        <qualifiedname>Counter::Counter</qualifiedname>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Construct a new <ref refid="class_counter" kindref="compound">Counter</ref> object. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Counter.h" line="45" column="5" bodyfile="src/Counter.cpp" bodystart="28" bodyend="31"/>
      </memberdef>
      <memberdef kind="function" id="class_counter_1a8f326a11501b408e09b204037fa26546" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int Counter::get_counter</definition>
        <argsstring>(void)</argsstring>
        <name>get_counter</name>
        <qualifiedname>Counter::get_counter</qualifiedname>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Getter for counter value. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Counter.h" line="50" column="9" bodyfile="src/Counter.cpp" bodystart="33" bodyend="36"/>
        <references refid="class_counter_1a7ed267f99d5efdec11b178f31cd00525" compoundref="_counter_8h" startline="60">counter</references>
      </memberdef>
      <memberdef kind="function" id="class_counter_1ad53b0e2937220780a6af39c865974511" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Counter::count_up</definition>
        <argsstring>(void)</argsstring>
        <name>count_up</name>
        <qualifiedname>Counter::count_up</qualifiedname>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Count up. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Counter.h" line="55" column="10" bodyfile="src/Counter.cpp" bodystart="38" bodyend="41"/>
        <references refid="class_counter_1a7ed267f99d5efdec11b178f31cd00525" compoundref="_counter_8h" startline="60">counter</references>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para><ref refid="class_counter" kindref="compound">Counter</ref>. </para>
    </briefdescription>
    <detaileddescription>
<para>Class to test requirements and justification in class level</para>
<para><xrefsect id="implements_1_implements000001"><xreftitle>Implements</xreftitle><xrefdescription><para>Requirement: SwRequirements.sw_req_counter_class </para>
</xrefdescription></xrefsect></para>
    </detaileddescription>
    <location file="src/Counter.h" line="39" column="1" bodyfile="src/Counter.h" bodystart="39" bodyend="61"/>
    <listofallmembers>
      <member refid="class_counter_1ad53b0e2937220780a6af39c865974511" prot="public" virt="non-virtual"><scope>Counter</scope><name>count_up</name></member>
      <member refid="class_counter_1a424d25be2a0c638f7b8c72195fa8c2ef" prot="public" virt="non-virtual"><scope>Counter</scope><name>Counter</name></member>
      <member refid="class_counter_1a7ed267f99d5efdec11b178f31cd00525" prot="private" virt="non-virtual"><scope>Counter</scope><name>counter</name></member>
      <member refid="class_counter_1a8f326a11501b408e09b204037fa26546" prot="public" virt="non-virtual"><scope>Counter</scope><name>get_counter</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
